@model CheckoutViewModel

@{
	ViewBag.Title = "CheckOut";
}

<style type="text/css">
	.tg {
		border-collapse: collapse;
		border-spacing: 0;
	}

		.tg td {
			font-family: Arial, sans-serif;
			font-size: 14px;
			padding: 10px 5px;
			border-style: solid;
			border-width: 1px;
			overflow: hidden;
			word-break: normal;
			border-color: black;
		}

		.tg th {
			font-family: Arial, sans-serif;
			font-size: 14px;
			font-weight: normal;
			padding: 10px 5px;
			border-style: solid;
			border-width: 1px;
			overflow: hidden;
			word-break: normal;
			border-color: black;
		}

		.tg .tg-cly1 {
			text-align: left;
			vertical-align: middle
		}
</style>


@*@{
		decimal totalBill = 0;
	}

	@if (Model != null)
	{
		if (Model.CartProducts != null && Model.CartProducts.Count > 0)
		{
			<div>
				@foreach (var product in Model.CartProducts)
				{
					var productIDs = Model.CartProductIds.Where(productId => productId == product.ID).Count();


					totalBill += product.Price * productIDs;
					<div>
						Name: product.Name - Price: product.Price - Quantity: @productIDs - Total: @product.Price @(product.Price * @productIDs)
					</div>
				}
				<div>
					Total Amount: @Model.CartProducts.Sum(x => x.Price * Model.CartProductIds.Where(productId => productId == x.ID).Count());
					Total Amount: @totalBill
				</div>
			</div>
		}
		else
		{
			<div>
				No Products in the Cart.
			</div>
		}
	}*@

<br />

@if (Model != null && Model.CartProducts != null && Model.CartProducts.Count > 0)
{
	var counter = 1;
	<div class="row">
		<div class="col-md-5 order-md-2 mb-4">
			<h4 class="mb-3">Billing address</h4>
			<form class="needs-validation" novalidate="">
				<div class="row">
					<div class="col-md-12 mb-3">
						<label for="firstName">Name</label>
						<input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="">
					</div>
				</div>

				@*<div class="mb-3">
						<label for="username">Username</label>
						<div class="input-group">
							<div class="input-group-prepend">
								<span class="input-group-text"></span>
							</div>
							<input type="text" class="form-control" id="username" placeholder="Username" required="">
							<div class="invalid-feedback" style="width: 100%;">
								Your username is required.
							</div>
						</div>
					</div>*@

				<div class="mb-3">
					<label for="email">Email</label>
					<input type="email" class="form-control" id="Email" value="@Model.User.Email" placeholder="you@example.com">
				</div>

				<div class="mb-3">
					<label for="address">Shipping Address</label>
					<input type="text" class="form-control" id="Address" placeholder="1234 Main St" value="@Model.User.Address" required="">
				</div>

				@*<div class="mb-3">
						<label for="address2">Address 2 <span class="text-muted">(Optional)</span></label>
						<input type="text" class="form-control" id="address2" placeholder="Apartment or suite">
					</div>

					<div class="row">
						<div class="col-md-5 mb-3">
							<label for="country">Country</label>
							<select class="custom-select d-block w-100" id="country" required="">
								<option value="">Choose...</option>
								<option>United States</option>
							</select>
							<div class="invalid-feedback">
								Please select a valid country.
							</div>
						</div>
						<div class="col-md-4 mb-3">
							<label for="state">State</label>
							<select class="custom-select d-block w-100" id="state" required="">
								<option value="">Choose...</option>
								<option>California</option>
							</select>
							<div class="invalid-feedback">
								Please provide a valid state.
							</div>
						</div>
						<div class="col-md-3 mb-3">
							<label for="zip">Zip</label>
							<input type="text" class="form-control" id="zip" placeholder="" required="">
							<div class="invalid-feedback">
								Zip code required.
							</div>
						</div>
					</div>
					<hr class="mb-4">
					<div class="custom-control custom-checkbox">
						<input type="checkbox" class="custom-control-input" id="same-address">
						<label class="custom-control-label" for="same-address">Shipping address is the same as my billing address</label>
					</div>
					<div class="custom-control custom-checkbox">
						<input type="checkbox" class="custom-control-input" id="save-info">
						<label class="custom-control-label" for="save-info">Save this information for next time</label>
					</div>
					<hr class="mb-4">

					<h4 class="mb-3">Payment</h4>

					<div class="d-block my-3">
						<div class="custom-control custom-radio">
							<input id="credit" name="paymentMethod" type="radio" class="custom-control-input" checked="" required="">
							<label class="custom-control-label" for="credit">Credit card</label>
						</div>
						<div class="custom-control custom-radio">
							<input id="debit" name="paymentMethod" type="radio" class="custom-control-input" required="">
							<label class="custom-control-label" for="debit">Debit card</label>
						</div>
						<div class="custom-control custom-radio">
							<input id="paypal" name="paymentMethod" type="radio" class="custom-control-input" required="">
							<label class="custom-control-label" for="paypal">Paypal</label>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 mb-3">
							<label for="cc-name">Name on card</label>
							<input type="text" class="form-control" id="cc-name" placeholder="" required="">
							<small class="text-muted">Full name as displayed on card</small>
							<div class="invalid-feedback">
								Name on card is required
							</div>
						</div>
						<div class="col-md-6 mb-3">
							<label for="cc-number">Credit card number</label>
							<input type="text" class="form-control" id="cc-number" placeholder="" required="">
							<div class="invalid-feedback">
								Credit card number is required
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-3 mb-3">
							<label for="cc-expiration">Expiration</label>
							<input type="text" class="form-control" id="cc-expiration" placeholder="" required="">
							<div class="invalid-feedback">
								Expiration date required
							</div>
						</div>
						<div class="col-md-3 mb-3">
							<label for="cc-expiration">CVV</label>
							<input type="text" class="form-control" id="cc-cvv" placeholder="" required="">
							<div class="invalid-feedback">
								Security code required
							</div>
						</div>
					</div>
				*@
				<hr class="mb-4">
				<button id="placeOrder" class="btn btn-primary btn-lg btn-block" type="button">Place Order</button>
			</form>

		</div>
		<div class="col-md-7 order-md-1">
			<h4 class="d-flex justify-content-between align-items-center mb-3"></h4>
			<div>
				<span class="text-muted">Your cart</span>
				<span class="badge badge-danger badge-pill">@Model.CartProducts.Count</span>
			</div>

			<table class="tg table table-striped">
				@foreach (var product in Model.CartProducts)
				{
					var productQuantity = Model.CartProductIds.Where(productId => productId == product.ID).Count();
					<tr>
						<th class="tg-cly1" style="text-align:center">@counter)</th>
						<th class="tg-cly1" colspan="2">@product.Name</th>
						<th class="tg-cly1" colspan="2" style="text-align:center">Quantity: <b>@productQuantity</b></th>
					</tr>
					<tr>
						<td class="tg-cly1" style="text-align:center" colspan="3" rowspan="2">@(@product.Description.Length >= 100 ? @product.Description.Substring(0, 99) : product.Description)</td>
						@*<td class="tg-cly1" colspan="3" rowspan="2">@product.Description</td>*@
						<td class="tg-cly1" style="text-align:center">Unit Price: </td>

						<td class="tg-cly1" style="text-align:center"><b>$ @product.Price</b></td>
					</tr>
					<tr>
						<td class="tg-cly1" style="text-align:center">Total Price:</td>
						<td class="tg-cly1" style="text-align:center"><b>$ @(product.Price * productQuantity)</b></td>
					</tr>
					counter++;
				}
				<tr>
					<td class="tg-cly1" colspan="4" style="text-align:right"><b>Grand Total</b></td>
					<td class="tg-cly1" style="text-align:center"><b>$ @Model.CartProducts.Sum(x => x.Price * Model.CartProductIds.Where(productId => productId == x.ID).Count())</b></td>
				</tr>
			</table>





			@*<ul class="list-group mb-3">
				@foreach (var product in Model.CartProducts)
				{
					var productQuantity = Model.CartProductIds.Where(productId => productId == product.ID).Count();

					<li class="list-group-item d-flex justify-content-between lh-condensed">
						<div style="float:left">
							<h4 class="my-0">@counter) @product.Name Qty - (@productQuantity)</h4>
							<small class="text-muted">@(@product.Description.Length >= 100 ? @product.Description.Substring(0, 99) : product.Description)</small>
						</div>
						<span class="text-muted"> Unit Price: $ @product.Price Total Price: $ @(product.Price * productQuantity)</span>


					</li>
					counter++;
				}
					<li class="list-group-item d-flex justify-content-between">
						<span>Total (USD)</span>
						<strong>$ @Model.CartProducts.Sum(x => x.Price * Model.CartProductIds.Where(productId => productId == x.ID).Count())</strong>
					</li>
					</ul>

					@*<form class="card p-2">
					<div class="input-group">
						<input type="text" class="form-control" placeholder="Promo code">
						<div class="input-group-append">
							<button type="submit" class="btn btn-secondary">Redeem</button>
						</div>
					</div>
				</form>*@
		</div>

	</div>

	<script>

		
	function hideLoader() {
		$(".loader").hide();
		$("#loading-overlay").hide('slow');
	};

	function showLoader() {
		$(".loader").show();
		$("#loading-overlay").show();
	};
	//


	$("#placeOrder").click(function myfunction() {
		showLoader();
		$.ajax({
			type: "Post",
			url: '@Url.Action("PlaceOrder","Shop")',   // '/Category/Create',
			data: {
				products: '@string.Join("-", Model.CartProductIds)'
			}
		})
			.done(function (response) {
				if (response.Success) {

					$.cookie('CartProducts', '', { path: '/' });
					updateCartProducts();
					swal({
						title: "Done",
						text: "Order Placed Successfully",
						icon: "success",
					}).then((value) => {
						window.location = '@Url.Action("Index","Shop")'
					});
				}
				else {
					swal({
			title: "Warning",
			text: "Sorry Unable to Place Your Order",
			icon: "warning",
			 buttons: true,
			 dangerMode: true,
			})
				}
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				swal({
			title: "Warning",
			text: "Please fill the required fields",
			icon: "warning",
			 buttons: true,
			 dangerMode: true,
			})
			})
			.always(function () {
					hideLoader();
				});
	});

	function updateCartProducts() {
		var cartProducts;
		var existingCookieData = $.cookie('CartProducts');

		if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {
			cartProducts = existingCookieData.split('-');
		}
		else {
			cartProducts = [];
		}

		$("#NoOfCartProducts").html(cartProducts.length);
	};

	</script>
}
else
{
	<div>
		No Products Found in the Cart.
	</div>
}








