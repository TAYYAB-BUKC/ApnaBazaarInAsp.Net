@model ShowWishlistViewModel

@{
	var defaultImageURL = @"/Content/images/Default/DefaultImage.png";
}

@if (Model.Wishlists.Count > 0)
{
	<div class="product-content product-threecolumn clearfix">
		<ul class="product style2">
			@foreach (var wishlist in Model.Wishlists)
			{

				var Image = wishlist.Product.Imagepath != null ? wishlist.Product.Imagepath : defaultImageURL;
				
			<li class="product-item">
				<div class="product-thumb clearfix">
					<a href="@Url.Action("Details","Product", new { Id = wishlist.ProductId })">
						<img src="@Image" alt="image">
					</a>
				</div>
				<div class="product-info clearfix">
					<span class="product-title">@wishlist.Product.Name</span>
					<div class="price">
						<ins>
							<span class="amount">$ @wishlist.Product.Price</span>
						</ins>
					</div>
				</div>
				<div class="add-to-cart text-center">
					<a class="productAddToCart" data-id="@wishlist.Product.ID">ADD TO CART</a>
				</div>
				<a class="like">
					<img src="/Content/images/Default/heart fill.png" height="30" width="30" class="addToWishlist" data-id="@wishlist.ProductId" data-wish="true" />
				</a>


			</li>
			}
		</ul><!-- /.product -->
	</div>
	<!-- /.product-content -->
}
else
{
	<div class="text-danger">No Products Found in the Wishlist.</div>
}
<br />

<div class="row">
	<div class="col-md-24 text-center" style="margin:auto">


		@if (Model.Pager != null)
		{

			<nav aria-label="Page navigation example">
				<ul class="pagination">

					@if (Model.Pager.CurrentPage > 1)
					{
						<li class="page-item">
							<a class="page-link Pagedata-link" data-href="@Url.Action("ResponseOfWishlist", "Shop", new { pageNo = Model.Pager.CurrentPage - 1, SearchTerm = Model.SearchTerm })" aria-label="Previous">
								<span aria-hidden="true">&laquo;</span>
							</a>
						</li>
					}

					@for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
					{
						string activeStyle = Model.Pager.CurrentPage == page ? "background-color: #f63440; color: #fff" : string.Empty;

						<li class="page-item"><a style="@activeStyle" class="Pagedata-link page-link" data-href="@Url.Action("ResponseOfWishlist", "Shop", new { pageNo = page, SearchTerm = Model.SearchTerm })">@page</a></li>

					}

					@if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
					{
						<li class="page-item">
							<a class="page-link Pagedata-link" data-href="@Url.Action("ResponseOfWishlist", "Shop", new { pageNo = Model.Pager.CurrentPage + 1, SearchTerm = Model.SearchTerm })" aria-label="Next">
								<span aria-hidden="true">&raquo;</span>
							</a>
						</li>
					}
				</ul>
			</nav> <!-- /.flat-pagination -->
		}
	</div>
</div>

<script>


		$(".addToWishlist").click(function () {

		var currentElement = this;

		if ($(this).attr("data-wish") == "true") {
			//console.log("AddToWihslist() Called");
			$.ajax({
				url: '@Url.Action("RemoveFromWishlist", "Shop")',
				data: {
					productID: $(this).attr("data-id")
				}
			})
				.done(function (response) {
					if (response.Success) {
						swal("Done", "Removed From your Wishlist.", "success");
						$(currentElement).attr("src", "/Content/images/Default/unfill heart.png");
						$(currentElement).attr("data-wish", "false");
						$.ajax({
							url: '@Url.Action("ResponseOfWishlist","Shop")'
			})
				.done(function (response) {
					//console.log(response);
					$("#tableContainer").html(response);
					focusAction("tableContainer");
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("Ajax Request Failed");
				});
					}
					else {
						swal("Error", "Unable to Add this product to your Wishlist.", "error");
					}
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("Ajax Request Failed");
				});

		}
		else {

			$.ajax({
				url: '@Url.Action("SaveToWishlist", "Shop")',
				data: {
					productID: $(this).attr("data-id")
				}
			})
				.done(function (response) {
					if (response.Success) {
						swal("Done", "Add To Wishlist.", "success");
						$(currentElement).attr("src", "/Content/images/Default/heart fill.png");
						$(currentElement).attr("data-wish", "true");
						$.ajax({
							url: '@Url.Action("ResponseOfWishlist","Shop")'
			})
				.done(function (response) {
					//console.log(response);
					$("#tableContainer").html(response);
					focusAction("tableContainer");
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("Ajax Request Failed");
				});
					}
					else {
						swal("Error", "Unable to Add this product to your Wishlist.", "error");
					}
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("Ajax Request Failed");
				});

		}
	});

	//$(".productAddToCart").click(function myfunction() {

	//	var products;
	//	var existingCartProducts = $.cookie('CartProducts');

	//	if (existingCartProducts != null && existingCartProducts != "" && existingCartProducts != undefined) {
	//		products = existingCartProducts.split('-');
	//	}
	//	else {
	//		products = [];
	//	}

	//	var productID = $(this).attr("data-id");
	//	products.push(productID);

	//	$.cookie('CartProducts', products.join('-'), { path: '/' });
	//	updateCartProducts();
	//	swal("Done", "Product Added to Cart.", "success");


	//});
</script>