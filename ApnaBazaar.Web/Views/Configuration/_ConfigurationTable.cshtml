
@model ConfigurationSearchViewModel
@{
	ViewBag.Title = "ProductTable";
}


<div>
	<form method="post">
		<div class="row">
			<div class="col-md-8">
				<div class="form-group">
					<label>Search</label>
					<input class="form-control" id="searchText" name="Search" value="@Model.SearchTerm" placeholder="Search any Configuration here...." />
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group">
					<label>Action</label>
					<div class="row">
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
						</div>
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
						</div>
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" data-toggle="modal" data-target="#SaveModal" type="button">New</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
</div>




<table id="ConfigurationTable" class="table table-bordered">
	<thead>
		<tr>
			<th class="font-weight-bold">Key</th>
			<th class="font-weight-bold">Value</th>
			<th class="font-weight-bold">Actions</th>
		</tr>
	</thead>
	<tbody>
		@if (Model.Configurations != null && Model.Configurations.Count > 0)
		{
			foreach (var configuration in Model.Configurations)
			{
				<tr>
					<td>@configuration.Key</td>
					<td>
						@configuration.Value
					</td>
					<td>
						<button class="EditBtn" data-toggle="modal" data-target="#EditModal" data-value="@configuration.Value" data-key="@configuration.Key">Edit</button>
						<button class="DeleteBtn" data-toggle="modal" data-target="#DeleteModal" data-value="@configuration.Value" data-key="@configuration.Key">Delete</button>
						@*<button class="AddToCart" data-id="@product.ID">AddToCart</button>*@
					</td>

				</tr>
			}
		}
		else
		{
			<tr><td colspan="3" class="text-danger">No Configurations found.</td></tr>
		}
	</tbody>

</table>




<div class="row">
	<div class="col-md-24 text-center" style="margin:auto">

		<nav aria-label="Page navigation example">
			<ul class="pagination">

				@if (Model.Pager.CurrentPage > 1)
				{
					<li class="page-item">
						<a class="page-link PageRecords" data-href="@Url.Action("ConfigurationTable", "Configuration", new { pageNo = Model.Pager.CurrentPage - 1 })" aria-label="Previous">
							<span aria-hidden="true">&laquo;</span>
						</a>
					</li>
				}

				@for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
				{
					string activeStyle = Model.Pager.CurrentPage == page ? "background-color: #f63440; color: #fff" : string.Empty;
					<li class="page-item"><a style="@activeStyle" class="PageRecords page-link" data-href="@Url.Action("ConfigurationTable", "Configuration", new { pageNo = page })">@page</a></li>

				}

				@if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
				{
					<li class="page-item">
						<a class="page-link PageRecords" data-href="@Url.Action("ConfigurationTable", "Configuration", new { pageNo = Model.Pager.CurrentPage + 1 })" aria-label="Next">
							<span aria-hidden="true">&raquo;</span>
						</a>
					</li>
				}


			</ul>
		</nav>
	</div>
</div>


<div>
	<div class="modal fade" id="SaveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">New Configuration</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form action="@Url.Action("Create","Configuration")">
						<div class="form-group">
							<label for="recipient-name" class="col-form-label">Key:</label>
							<input type="text" class="form-control" id="key">
						</div>
						<div class="form-group">
							<label for="message-text" class="col-form-label">Value:</label>
							<input type="text" class="form-control" id="Value">

						</div>
					</form>
				</div>
				<div class="modal-footer">
					<button type="button" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" id="Save">Save</button>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="EditModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Edit Configuration</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<label for="recipient-name" class="col-form-label">Key:</label>
						<input type="text" class="form-control" id="Editkey" disabled>
					</div>
					<div class="form-group">
						<label for="message-text" class="col-form-label">Value:</label>
						<input type="text" class="form-control" id="EditValue" >

					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" id="Edit">Edit</button>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="DeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Delete Configuration</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<label for="recipient-name" class="col-form-label">Key:</label>
						<input type="text" class="form-control" id="Deletekey" disabled>
					</div>
					<div class="form-group">
						<label for="message-text" class="col-form-label">Value:</label>
						<input type="text" class="form-control" id="DeleteValue" disabled>

					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" data-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" id="Delete">Delete</button>
			</div>
		</div>
	</div>
</div>

<script>

	


	//$("#exampleModal").on("show.bs.modal", function (event) {
	//	var button = $(event.relatedTarget) // Button that triggered the modal
	//	//var recipient = button.data("whatever") // Extract info from data-* attributes
	//	// If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
	//	// Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
	//	var modal = $(this)
	//	modal.find(".modal-title").text("New message to ")
	//	modal.find(".modal-body input").val(recipient)
	//	console.log("Event Fired Successfully");
	//});

	$("#Save").click(function myfunction() {
		var key = $("#key").val();
		var value = $("#Value").val();

		$.ajax({
			type: 'post',
			url: '@Url.Action("Create","Configuration")', // '/Product/ProductTable',
			data:
			{
				Key: key,
				Value: value
			}
		})
			.done(function (response) {

			$("div").remove(".modal-backdrop","fade","show");
			$("#tableContainer").html(response);
			swal("Done", "Configuration Added Successfully.", "success");

        })
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				//console.log(errorThrown);
        	    //alert("Ajax Request Failed");
        });

	});


	
	$("#Edit").click(function myfunction() {
		var key = $("#Editkey").val();
		var value = $("#EditValue").val();

		$.ajax({
			type: 'post',
			url: '@Url.Action("Edit","Configuration")', // '/Product/ProductTable',
			data:
			{
				Key: key,
				Value: value
			}
		})
			.done(function (response) {

			$("div").remove(".modal-backdrop","fade","show");
			$("#tableContainer").html(response);
			swal("Done", "Configuration Updated Successfully.", "success");

        })
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				//console.log(errorThrown);
        		//alert("Ajax Request Failed");
        });

	});


	


	$("#Delete").click(function myfunction() {
		var key = $("#Deletekey").val();
		swal({
			title: "Confirm?",
			text: "Are you sure you want to delete this Configuration?",
			icon: "warning",
			 buttons: true,
			 dangerMode: true,
			})
		.then((willDelete) => {
			if (willDelete) {
				$.ajax({
					type: 'Post',
					url: '@Url.Action("Delete","Configuration")',//'/Product/Delete',
					data:
					{
						Key: key
					}
				})
					.done(function (response) {
						swal("Done! Your Configuration has been deleted!", {
							icon: "success",
						});
						$("div").remove(".modal-backdrop","fade","show");
						$("#tableContainer").html(response);


					})
					.fail(function (XMLHttpRequest, textStatus, errorThrown) {
						alert("Ajax Request Failed");
					});

			}
	});

		});




	//$("#ProductsTable").DataTable();
	$(".PageRecords").click(function myfunction() {
				var url = $(this).attr("data-href");
		if (url != "" || url != undefined) {
			GetPaginationData(url);
		}
		else {
			swal({
				title: "Warning",
				text: "Please click the page number correctly",
				icon: "warning",
				buttons: true,
				dangerMode: true,
			})
		}




	});


	function GetPaginationData(DUrl) {
		$.ajax({
			url: DUrl,
			data: {
					search: '@Model.SearchTerm'
				}
		})
			.done(function (response) {
				$("#tableContainer").html(response);
				focusAction("tableContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Ajax Request Failed");
		});
	}




	$("#searchBtn").click(function myfunction(){
		var searchvalue = $("#searchText").val();
		$.ajax({
			url: '@Url.Action("ProductTable","Product")', // '/Product/ProductTable',
			data:
			{
				search: searchvalue
			},
		})
        .done(function (response) {
        	$("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Ajax Request Failed");
        });
	});


	$("#resetBtn").click(function myfunction(){
		var searchvalue = '';
		$.ajax({
			url: '@Url.Action("ProductTable","Product")', //'/Product/ProductTable',
			data:
			{
				search: searchvalue
			},
		})
        .done(function (response) {
        	$("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Ajax Request Failed");
        });
	});




	$(".DeleteBtn").click(function myfunction() {

		$("#Deletekey").attr("value", $(this).attr("data-key"));
		$("#DeleteValue").attr("value", $(this).attr("data-value"));

	});







</script>
