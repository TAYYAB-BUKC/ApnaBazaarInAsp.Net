@model Product
@{
	ViewBag.Title = "Create";

	var category = @Model.Category.ID;

	var imageChecked = Model.Imagepath != null ? Model.Imagepath : @"/Content/images/Default/DefaultImage.png";

}
	<form id="editProductForm">
		<div class="row">
			<div class="col-md-8">
				<input type="hidden" name="Id" value=@Model.ID />
				<div class="form-group">
					<input class="form-control" name="Name" placeholder="Enter name" value="@Model.Name" />
				</div>
				<div class="form-group">
					<select id="categories" class="form-control" name="Category">
						<option value="@Model.Category.ID">@Model.Category.Name</option>
					</select>
				</div>
				<div class="form-group">
					<input class="form-control" name="Description" placeholder="Enter Description" value="@Model.Description" />
				</div>
				<div class="form-group">
					<input class="form-control" name="Price" placeholder="Enter Price" value="@Model.Price" />
				</div>
				<br />
				<div class="form-group">
					<label>Select Image</label>
					<input class="form-control" id="Imagepath" name="Imagepath" type="hidden" />
					<input class="form-control" id="imageUpload" name="Image" type="file" />
				</div>
				<br />
			</div>
			<div class="col-md-4">
				<div class="thumb">
					<img src="@imageChecked" height="400" width="400" class="img-thumbnail img-fluid" id="image" />
				</div>
				<br />
			</div>
			<button id="EditBtn" type="button">Update</button>

			<button id="CancelBtn" type="button">Cancel</button>
		</div>


	</form>


<script>

	$("#imageUpload").change(function () {
		var element = this;

		var formData = new FormData();

		var totalFiles = element.files.length;

		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}

		$.ajax({
			type: 'POST',
			url: '@Url.Action("UploadImage","Shared")', //'/Shared/UploadImage',
			dataType: 'json',
			data: formData,
			contentType: false,
			processData: false
		})
			.done(function (response) {
				if (response.Success) {
					$("#image").attr("src", response.ImageURL);
					$("#Imagepath").val(response.ImageURL);
				}
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Ajax Request Failed");
			});
	});



	$("#EditBtn").click(function myfunction() {
		var x = $("#imageUpload").val();
		if (x == "") {
			var value = $("#image").attr("src");
				$("#Imagepath").val(value);
			}
		$.ajax({
			type: 'Post',
			url: '@Url.Action("Edit","Product")', //'/Product/Edit',
			data:	$("#editProductForm").serialize()

		})
			.done(function (response) {
				$("#tableContainer").html(response);
				$("#editProductForm").html("");
				focusAction("tableContainer");
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Ajax Request Failed");
			});
	});

	$(document).ready(function () {
		$.ajax({
			url: '@Url.Action("ForEdit","Product")', //'/Product/ForEdit',
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			//data:	$("#editProductForm").serialize()
		})
			.done(function (response) {
				$("#categories").empty();
				for (i = 0; i < response.CategoryNames.length; i++) {
					if (response.CategoryIds[i] == "@category") {
						var ind = response.CategoryIds[i];
						break;
					}
				}
				var i;
				for (i = 0; i < response.CategoryNames.length; i++) {
					$("#categories").append(new Option(response.CategoryNames[i], response.CategoryIds[i]));
				}
				//$("#categories").index = ind;
				 $("#categories").val(ind);
				 /*	var ddlCustomers = $("[id*=categories]");
					ddlCustomers.empty();
					$.each(response.d, function () {
						ddlCustomers.append($("<option></option>").val(this['Value']).html(this['Text']));
					});*/
				})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("Ajax Request Failed");
			});
	});

	$("#CancelBtn").click(function myfunction() {
		$("#createProduct").html("");
		focusAction("tableContainer");
			
	});
</script>