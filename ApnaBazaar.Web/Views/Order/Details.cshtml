@model OrderDetailViewModel
@{
	ViewBag.Title = "OrderDetails";
}

@if (Model != null && Model.Order != null)
{
	var counter = 1;
	<div class="row">
		<div class="col-md-4 order-md-2 mb-4">
			<h4 class="d-flex justify-content-between align-items-center mb-3">
				<span class="text-muted">Your cart</span>
				<span class="badge badge-secondary badge-pill">3</span>
			</h4>
			<ul class="list-group mb-3">
				@foreach (var orderItem in Model.Order.OrderItems)
				{
					<li class="list-group-item d-flex justify-content-between lh-condensed">
						<div>
							<h6 class="my-0">@orderItem.Product.Name Qty-(@orderItem.Quantity)</h6>
							<small class="text-muted">@(orderItem.Product.Description.Length >= 100 ? orderItem.Product.Description.Substring(0, 99) : orderItem.Product.Description)</small>
						</div>
						<span class="text-muted">$ @orderItem.Product.Price</span>
					</li>
					counter++;
				}
				<li class="list-group-item d-flex justify-content-between">
					<span>Total (USD)</span>
					<strong>$ @Model.Order.TotalAmount</strong>
				</li>
			</ul>

			@*<form class="card p-2">
					<div class="input-group">
						<input type="text" class="form-control" placeholder="Promo code">
						<div class="input-group-append">
							<button type="submit" class="btn btn-secondary">Redeem</button>
						</div>
					</div>
				</form>*@
		</div>
		<div class="col-md-8 order-md-1">
			<h4 class="mb-3">Billing address</h4>
			<form class="needs-validation" novalidate="">
				<div class="row">
					<div class="col-md-12 mb-3">
						<label for="firstName">Name</label>
						<input type="text" disabled class="form-control" id="Name" placeholder="" value="@Model.OrderBy.Name" required="">
					</div>
				</div>

				@*<div class="mb-3">
						<label for="username">Username</label>
						<div class="input-group">
							<div class="input-group-prepend">
								<span class="input-group-text"></span>
							</div>
							<input type="text" class="form-control" id="username" placeholder="Username" required="">
							<div class="invalid-feedback" style="width: 100%;">
								Your username is required.
							</div>
						</div>
					</div>*@

				<div class="mb-3">
					<label for="email">Email</label>
					<input type="email" disabled class="form-control" id="Email" value="@Model.OrderBy.Email" placeholder="you@example.com">
				</div>

				<div class="mb-3">
					<label for="address">Shipping Address</label>
					<input type="text" disabled class="form-control" id="Address" placeholder="1234 Main St" value="@Model.OrderBy.Address" required="">
				</div>

				<div class="mb-3">
					<label for="status">Status</label>
					<select name="statuses" id="changeStatus">
						@foreach (var AvailableStatuses in Model.AvailableStatuses)
						{
							var isSelectedStatus = AvailableStatuses == Model.Order.Status;
							<option @(isSelectedStatus ? "selected" : string.Empty)>@AvailableStatuses</option>
						}
					</select>
				</div>

			</form>
		</div>
	</div>


	<script>
		$("#changeStatus").change(function myfunction() {
			debugger;
		$.ajax({
			type: "Post",
			url: '@Url.Action("UpdateStatus","Order")',   // '/Category/Create',
			data: {
				status: $(this).val(),
				orderID: '@Model.Order.Id'
			}
		})
			.done(function (response) {
				if (response.Success) {
				swal("Done", "Order Status Updated Successfully", "success");		
				}
				else {
					swal({
			title: "Error",
			text: "Sorry for inconvenience please try again later.",
			icon: "warning",
			 buttons: true,
			 dangerMode: true,
			})
				}
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				swal({
			title: "Error",
			text: "Sorry for inconvenience please try again later.",
			icon: "warning",
			 buttons: true,
			 dangerMode: true,
			})
			});
		});
	</script>


}
else
{
	<div>
		<b>Order Details Not Available.</b>
	</div>
}

